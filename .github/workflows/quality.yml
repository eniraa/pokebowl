name: Quality Check

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: "17 5 * * 0"

concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PIP_NO_CACHE_DIR: false
  PIP_USER: 1
  PYTHON_VERSION: "3.10"

  POETRY_VIRTUALENVS_CREATE: false

  POETRY_CACHE_DIR: ${{ github.workspace }}/.cache/py-user-base
  PYTHONUSERBASE: ${{ github.workspace }}/.cache/py-user-base
  PRE_COMMIT_HOME: ${{ github.workspace }}/.cache/pre-commit-cache

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Add custom PYTHONUSERBASE to PATH
        run: echo '${{ env.PYTHONUSERBASE }}/bin/' >> $GITHUB_PATH

      - name: Checks out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Python Dependency Caching
        uses: actions/cache@v2
        id: python_cache
        with:
          path: ${{ env.PYTHONUSERBASE }}
          key: "python-0-${{ runner.os }}-${{ env.PYTHONUSERBASE }}-${{ steps.python.outputs.python-version }}-${{ hashFiles('./pyproject.toml', './poetry.lock') }}"

      - name: Install dependencies using poetry
        if: steps.python_cache.outputs.cache-hit != 'true'
        run: |
          pip install poetry
          poetry install
      - name: Run pre-commit hooks
        run: export PIP_USER=0; SKIP="no-commit-to-branch,black,flake8" pre-commit run --all-files

      - name: Check files with black
        run: black . --check --diff --color

      - name: Run flake8
        run: "flake8 --format='::error file=%(path)s,line=%(row)d,col=%(col)d::[flake8] %(code)s: %(text)s'"
